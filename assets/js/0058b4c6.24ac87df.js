"use strict";(self.webpackChunkrne_website=self.webpackChunkrne_website||[]).push([[849],{86164:t=>{t.exports=JSON.parse('{"version":{"pluginId":"default","version":"5.1.3","label":"5.1.3","banner":null,"badge":true,"noIndex":false,"className":"docs-version-5.1.3","isLast":true,"docsSidebars":{},"docs":{"components/airbnbrating":{"id":"components/airbnbrating","title":"AirbnbRating","description":"Ratings are used to collect measurable feedback from users."},"components/avatar":{"id":"components/avatar","title":"Avatar","description":"Avatars are found all over ui design from lists to profile screens."},"components/avatar_accessory":{"id":"components/avatar_accessory","title":"Avatar.Accessory","description":"This is used for adding an accessory to the Avatar."},"components/badge":{"id":"components/badge","title":"Badge","description":"Badges are small components typically used to communicate a numerical value or indicate the status of an item to the user."},"components/bottomsheet":{"id":"components/bottomsheet","title":"BottomSheet","description":"Overlay Modal that displays content from the bottom of the screen."},"components/button":{"id":"components/button","title":"Button","description":"Import"},"components/buttongroup":{"id":"components/buttongroup","title":"ButtonGroup","description":"ButtonGroup is a linear set of segments, each of which function as a button that can display a different view/or perform a different action."},"components/card":{"id":"components/card","title":"Card","description":"Cards are a great way to display information, usually containing content and actions about a single subject."},"components/card_divider":{"id":"components/card_divider","title":"Card.Divider","description":"Add divider to the card which acts as a separator between elements."},"components/card_featuredsubtitle":{"id":"components/card_featuredsubtitle","title":"Card.FeaturedSubtitle","description":"Add a featured subtitle to the Card."},"components/card_featuredtitle":{"id":"components/card_featuredtitle","title":"Card.FeaturedTitle","description":"Add a featured title to the Card."},"components/card_image":{"id":"components/card_image","title":"Card.Image","description":"Add information in the form of image to the card."},"components/card_title":{"id":"components/card_title","title":"Card.Title","description":"Add a general title to the Card."},"components/checkbox":{"id":"components/checkbox","title":"CheckBox","description":"CheckBoxes allow users to complete tasks that involve making choices such as selecting options, or switching settings - On or Off."},"components/chip":{"id":"components/chip","title":"Chip","description":"Chips are compact elements that represent an input, attribute, or action."},"components/dialog":{"id":"components/dialog","title":"Dialog","description":"Dialogs inform users about a task and can contain critical information, require decisions, or involve multiple tasks."},"components/dialog_actions":{"id":"components/dialog_actions","title":"Dialog.Actions","description":"Define Dialog Actions using this component."},"components/dialog_button":{"id":"components/dialog_button","title":"Dialog.Button","description":"This is used to add a button to the Dialog."},"components/dialog_loading":{"id":"components/dialog_loading","title":"Dialog.Loading","description":"DialogLoader allows adding loader to the Dialog. Loader is simply ActivityIndicator."},"components/dialog_title":{"id":"components/dialog_title","title":"Dialog.Title","description":"DialogTitle allows you to add title to the Dialog."},"components/divider":{"id":"components/divider","title":"Divider","description":"Dividers are visual separators of content."},"components/fab":{"id":"components/fab","title":"FAB","description":"A floating action button (FAB) performs the primary, or most common, action on a screen."},"components/header":{"id":"components/header","title":"Header","description":"Headers are navigation components that display information and actions relating to the current screen."},"components/icon":{"id":"components/icon","title":"Icon","description":"Icons are visual indicators usually used to describe action or intent."},"components/image":{"id":"components/image","title":"Image","description":"Drop-in replacement for the standard React Native Image component that displays"},"components/input":{"id":"components/input","title":"Input","description":"Import"},"components/linearprogress":{"id":"components/linearprogress","title":"LinearProgress","description":"Progress indicators inform users about the status of ongoing processes, such as loading an app, submitting a form, or saving updates."},"components/listitem":{"id":"components/listitem","title":"ListItem","description":"ListItems are used to display rows of information, such as a contact list, playlist, or menu."},"components/listitem_accordion":{"id":"components/listitem_accordion","title":"ListItem.Accordion","description":"This allows making a accordion list which can show/hide content."},"components/listitem_buttongroup":{"id":"components/listitem_buttongroup","title":"ListItem.ButtonGroup","description":"This allows adding ButtonGroup to the ListItem."},"components/listitem_checkbox":{"id":"components/listitem_checkbox","title":"ListItem.CheckBox","description":"This allows adding CheckBox to the ListItem."},"components/listitem_chevron":{"id":"components/listitem_chevron","title":"ListItem.Chevron","description":"This allows adding a Chevron Icon(arrow) to the ListItem."},"components/listitem_content":{"id":"components/listitem_content","title":"ListItem.Content","description":"This allows adding content to the ListItem."},"components/listitem_input":{"id":"components/listitem_input","title":"ListItem.Input","description":"This allows adding an Text Input within the ListItem."},"components/listitem_subtitle":{"id":"components/listitem_subtitle","title":"ListItem.Subtitle","description":"This allows adding SubTitle to the ListItem."},"components/listitem_swipeable":{"id":"components/listitem_swipeable","title":"ListItem.Swipeable","description":"We offer a special kind of ListItem which is swipeable from both ends and allows users select an event."},"components/listitem_title":{"id":"components/listitem_title","title":"ListItem.Title","description":"This allows adding Title to the ListItem."},"components/overlay":{"id":"components/overlay","title":"Overlay","description":"The Overlay is a view that floats above an app\u2019s content."},"components/pricingcard":{"id":"components/pricingcard","title":"PricingCard","description":"Pricing is a convenience component used to display features and pricing tables in a beautiful and engaging way."},"components/rating":{"id":"components/rating","title":"Rating","description":"Ratings are used to collect measurable feedback from users."},"components/searchbar":{"id":"components/searchbar","title":"SearchBar","description":"Import"},"components/skeleton":{"id":"components/skeleton","title":"Skeleton","description":"Import"},"components/slider":{"id":"components/slider","title":"Slider","description":"Sliders allow users to select a value from a fixed set of values using drag utility."},"components/socialicon":{"id":"components/socialicon","title":"SocialIcon","description":"SocialIcons are visual cues to online and social media networks. We offer a varied range of social icons."},"components/speeddial":{"id":"components/speeddial","title":"SpeedDial","description":"When pressed, a floating action button can display three to six related actions in the form of a speed dial."},"components/speeddial_action":{"id":"components/speeddial_action","title":"SpeedDial.Action","description":"Adds Action to the SpeedDial."},"components/switch":{"id":"components/switch","title":"Switch","description":"Switch represents user\'s decision of a process and indicates whether a state is on/off."},"components/tab":{"id":"components/tab","title":"Tab","description":"Tabs organize content across different screens, data sets, and other interactions."},"components/tab_item":{"id":"components/tab_item","title":"Tab.Item","description":"They are individual item of the parent Tab."},"components/tabview":{"id":"components/tabview","title":"TabView","description":"Tabs organize content across different screens, data sets, and other interactions."},"components/tabview_item":{"id":"components/tabview_item","title":"TabView.Item","description":"They are individual item of the parent Tab."},"components/text":{"id":"components/text","title":"Text","description":"Text displays words and characters of various sizes."},"components/tile":{"id":"components/tile","title":"Tile","description":"Tiles like Cards, are a convenient way to display related content about a single subject."},"components/tooltip":{"id":"components/tooltip","title":"Tooltip","description":"Tooltips display informative text when users tap on an element."},"customization/extending":{"id":"customization/extending","title":"Extending Theme","description":"TypeScript definitions for your theme can be extended by using TypeScript\'s declaration merging feature. First you need to create a declaration file called themed.d.ts and then declare the module @rn-vui/themed and \'re-export\' the types that you want to extend. i.e. below we add a custom p1Style to the Text theme object and we add a bunch of colors to the colors object."},"customization/index":{"id":"customization/index","title":"Overview","description":"Congrats! You\'ve installed React Native Elements and your immediate question"},"customization/pitfall":{"id":"customization/pitfall","title":"Common Pitfalls","description":"This section outlines some common pitfalls when using Theming."},"customization/styles":{"id":"customization/styles","title":"Styles","description":"makeStyles"},"customization/theme_object":{"id":"customization/theme_object","title":"Theme object","description":"Theme Properties"},"customization/themeprovider":{"id":"customization/themeprovider","title":"Theme Provider","description":"The previous solution works great for only one component, but imagine having to"},"installation":{"id":"installation","title":"","description":"Installation"},"overview":{"id":"overview","title":"Overview","description":"The aim of React Native vElements is to provide an all-in-one UI kit for"},"repo/contributing":{"id":"repo/contributing","title":"","description":""},"repo/labels":{"id":"repo/labels","title":"Label Guide","description":"This page explains how we use labels throughout the repo to tag issues and pull"},"repo/testing":{"id":"repo/testing","title":"Testing","description":"We are using tests to make sure components keep their functionality between versions and edits."},"troubleshooting":{"id":"troubleshooting","title":"Troubleshooting","description":"Although we try to make the experience of using React Native vElements"},"universe/getting_started":{"id":"universe/getting_started","title":"Getting Started","description":""}}}}')}}]);