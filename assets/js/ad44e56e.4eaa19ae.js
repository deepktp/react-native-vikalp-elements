"use strict";(self.webpackChunkrne_website=self.webpackChunkrne_website||[]).push([[7877],{5169:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"repo/testing","title":"Testing","description":"We are using tests to make sure components keep their functionality between versions and edits.","source":"@site/versioned_docs/version-5.1.0/repo/testing.md","sourceDirName":"repo","slug":"/testing","permalink":"/docs/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/react-native-elements/react-native-elements/edit/next/website/versioned_docs/version-5.1.0/repo/testing.md","tags":[],"version":"5.1.0","frontMatter":{"id":"testing","title":"Testing","slug":"/testing"},"sidebar":"docs","previous":{"title":"Contributing","permalink":"/docs/contributing"},"next":{"title":"Label Guide","permalink":"/docs/labels"}}');var i=n(74848),r=n(28453);const o={id:"testing",title:"Testing",slug:"/testing"},a=void 0,h={},c=[{value:"Snapshot Testing",id:"snapshot-testing",level:2},{value:"Functional Testing",id:"functional-testing",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"We are using tests to make sure components keep their functionality between versions and edits.\r\nThey're many testing libraries for JavaScript and React Native, depending on what type of testing you're doing."}),"\n",(0,i.jsxs)(t.p,{children:["The type of tests we use on React Native vElements are ",(0,i.jsx)(t.a,{href:"#snapshot-testing",children:"Snapshot"}),"\r\nand ",(0,i.jsx)(t.a,{href:"#functional-testing",children:"Functional"})," tests."]}),"\n",(0,i.jsx)(t.h2,{id:"snapshot-testing",children:"Snapshot Testing"}),"\n",(0,i.jsxs)(t.p,{children:["Snapshot testing sounds exactly like what it does! It takes snapshot of the structure of a rendered\r\ncomponent the props, and their values and saves it. Whenever a change is made it'll compare it to the original snapshot -\r\njust to be super sure the change you wanted to make had the desired outcome.\r\nIf the outcomes is what you expected, then you need to ",(0,i.jsx)(t.strong,{children:"update the snapshot"}),", so that your changes will be the new\r\nstandard to compare to for changes in the future."]}),"\n",(0,i.jsx)(t.p,{children:"To update the snapshots run this command:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"# yarn\r\nyarn test -u\r\n\r\n# npm\r\nnpm run test -u\n"})}),"\n",(0,i.jsxs)(t.p,{children:["For Snapshot Testing, we use ",(0,i.jsx)(t.a,{href:"https://jestjs.io/",children:"Jest"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["You can read more about snapshot testing ",(0,i.jsx)(t.a,{href:"https://jestjs.io/docs/en/snapshot-testing.html",children:"here"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"functional-testing",children:"Functional Testing"}),"\n",(0,i.jsxs)(t.p,{children:["Functional tests ensures that a component functions the way it should(",(0,i.jsx)(t.em,{children:"simplified"}),"). This is important\r\nfor making changes to components, as it makes sure we don't break how something worked previously."]}),"\n",(0,i.jsx)(t.p,{children:"For example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-md",children:"If a user touches on a button in the button group, then the button selected should be highlighted\r\nand the previous one un-highlighted.\n"})}),"\n",(0,i.jsxs)(t.p,{children:["For Functional Testing, we use ",(0,i.jsx)(t.a,{href:"https://callstack.github.io/react-native-testing-library/",children:"React Native Testing Library"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["You can read more about functional testing ",(0,i.jsx)(t.a,{href:"https://www.guru99.com/functional-testing.html",children:"here"}),"."]})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);