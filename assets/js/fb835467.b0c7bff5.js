(self.webpackChunkrne_website=self.webpackChunkrne_website||[]).push([[172],{24917:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var a=n(67294),r=n(7122),i=n(54236),l=n(40318),o=n(62290);const s=function(){var e=(0,l.Z)({componentName:"Slider",props:{animateTransitions:{value:!0,type:o.n.Boolean},animationConfig:{valie:"{}",type:o.n.Object},animationType:{value:"timing",options:{timing:"timing",spring:"spring"},type:o.n.Enum,description:"Defines the Animation type."},debugTouchArea:{type:o.n.Boolean,value:!1,description:"Set this to true to visually see the thumb touch rect in green."},disabled:{type:o.n.Boolean,value:!1,description:"Disables the slider"},maximumTrackTintColor:{type:o.n.String,value:"#ccc"},maximumValue:{value:100,type:o.n.Number},minimumTrackTintColor:{type:o.n.String,value:"#222"},minimumValue:{value:0,type:o.n.Number},allowTouchTrack:{type:o.n.Boolean,value:!1,description:"If true, thumb will respond and jump to any touch along the track."},onSlidingComplete:{type:o.n.Function,value:'() => console.log("onSlidingComplete()")'},onSlidingStart:{type:o.n.Function,value:'() => console.log("onSlidingStart()")'},onValueChange:{type:o.n.Function,value:'(value) => console.log("onValueChange()",value)'},orientation:{value:"horizontal",options:{horizontal:"horizontal",vertical:"vertical"},type:o.n.Enum,description:"Slider's Orientation"},step:{value:1,type:o.n.Number},style:{value:'{width:"80%",height:200}',type:o.n.Object},thumbStyle:{value:"{ height: 20, width: 20 }",type:o.n.Object},thumbProps:{value:'{\n          children: (\n            <Icon\n              name="heartbeat"\n              type="font-awesome"\n              size={20}\n              reverse\n              containerStyle={{ bottom: 20, right: 20 }}\n              color="#f50"\n            />\n          ),\n        }',type:o.n.Object},thumbTintColor:{type:o.n.String,value:"#0c0"},thumbTouchSize:{type:o.n.Object,value:"{width: 40, height: 40}"},trackStyle:{value:"{ height: 10,borderRadius:20 }",type:o.n.Object},value:{value:50,type:o.n.Number}},scope:{Slider:r.Slider,Icon:r.Icon},imports:{"@rneui/base":{named:["Slider","Icon"]}}});return a.createElement(a.Fragment,null,a.createElement(i.Z,{params:e}))}},37047:(e,t,n)=>{"use strict";n.d(t,{w:()=>s});var a=n(67294),r=n(35742),i=n(14330),l=n(98576),o=n(61720),s=function(){return a.createElement(r.Z,null,a.createElement("style",{type:"text/css"},"\n          @font-face {\n            font-family: 'MaterialIcons';\n            src: url("+l.Z+") format('truetype');\n          }\n          @font-face {\n            font-family: 'FontAwesome';\n            src: url("+o.Z+") format('truetype');\n          }\n          @font-face {\n            font-family: 'MaterialCommunityIcons';\n            src: url("+i.Z+") format('truetype');\n          }\n        "))}},54236:(e,t,n)=>{"use strict";n.d(t,{Z:()=>c});var a=n(87462),r=n(67294),i=n(91262),l=n(18421),o=n(77356),s=n(41652),m=n(24309),d=n(16042),u=n(20346),p=n(30650);const c=function(e){var t=e.params,n=e.containerStyle,c=void 0===n?{}:n;return r.createElement(i.Z,{fallback:r.createElement(r.Fragment,null,"Loading...")},(function(){return r.createElement(u.X9.Provider,null,r.createElement(u.PK,{initialMetrics:p.o},r.createElement("div",{style:Object.assign({border:"1px solid var(--ifm-color-emphasis-200)",borderRadius:"var(--ifm-global-radius)",position:"relative"},c)},r.createElement(l.Z,(0,a.Z)({},t.compilerProps,{minHeight:62,placeholder:o.Z}))),r.createElement(s.Z,{msg:t.errorProps.msg,isPopup:!0}),r.createElement(m.Z,t.knobProps),r.createElement(s.Z,t.errorProps),r.createElement(d.E,t.actions)))}))}},22365:(e,t,n)=>{"use strict";n.d(t,{Z:()=>f});var a=n(63366),r=n(87462),i=n(67294),l=n(10407),o=n(86010),s=(n(95999),n(52263)),m=n(91262),d=n(66412);const u="playgroundContainer_TGbA",p="playgroundEditor_PvJ1",c="playgroundPreview_bb8I",h="toggleContainer_ZZiH",g="toggleIcon_OnrQ",C="showCode_O0Od";var A=n(72389),k=n(5434),v=["children","transformCode"];function b(){return i.createElement("div",null,"Loading...")}function y(e){var t=(0,A.Z)(),n=(0,i.useContext)(l.L2),a=n.code,o=n.language,s=n.theme,m=n.disabled,d=n.onChange;return i.createElement(l.uz,(0,r.Z)({key:String(t),code:a,language:o,theme:s,disabled:m,onChange:d},e,{className:p}))}function D(e){var t=e.showCode,n=e.preImports,a=void 0===n?"":n,r=(e.wrapper,i.useState(t)),s=r[0],d=r[1],u=function(){d((function(e){return!e}))};return i.createElement(i.Fragment,null,i.createElement("div",{className:c},i.createElement(m.Z,{fallback:i.createElement(b,null)},(function(){return i.createElement(i.Fragment,null,i.createElement(l.i5,null),i.createElement(l.IF,null),i.createElement("div",{className:h},i.createElement("div",{className:(0,o.Z)(g),onClick:u},i.createElement(k.xoN,null),i.createElement("span",{className:C},s?"Hide":"Show"," Code"))))}))),s&&i.createElement(y,{preImports:a,showCode:s}))}function f(e){var t=e.children,n=(e.transformCode,(0,a.Z)(e,v)),o=((0,s.Z)().siteConfig.themeConfig.liveCodeBlock.playgroundPosition,(0,d.p)());return i.createElement("div",{className:u},i.createElement(l.nu,(0,r.Z)({code:t.replace(/\n$/,""),theme:o},n),i.createElement(D,{showCode:n.showCode})))}},56922:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var a=n(67294),r=n(32408),i=n(7122),l=n(53211),o=n(83279);const s=Object.assign({React:a,LinearGradient:o.Z},r,i,l,a)},41844:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>A,contentTitle:()=>g,default:()=>b,frontMatter:()=>h,metadata:()=>C,toc:()=>k});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),l=n(37047),o=(n(74866),n(85162),n(96711)),s=n(47516),m=["components"],d={toc:[]};function u(e){var t=e.components,n=(0,r.Z)(e,m);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"snack-player","data-snack-name":"RNE Slider","data-snack-description":"Example usage","data-snack-code":"import%20React%2C%20%7B%20useState%20%7D%20from%20'react'%3B%0Aimport%20%7B%20View%2C%20StyleSheet%20%7D%20from%20'react-native'%3B%0Aimport%20%7B%20Slider%2C%20Text%2C%20Icon%20%7D%20from%20'%40rneui%2Fthemed'%3B%0A%0Atype%20SlidersComponentProps%20%3D%20%7B%7D%3B%0A%0Aconst%20Sliders%3A%20React.FunctionComponent%3CSlidersComponentProps%3E%20%3D%20()%20%3D%3E%20%7B%0Aconst%20%5Bvalue%2C%20setValue%5D%20%3D%20useState(0)%3B%0Aconst%20%5BvertValue%2C%20setVertValue%5D%20%3D%20useState(0)%3B%0A%0Aconst%20interpolate%20%3D%20(start%3A%20number%2C%20end%3A%20number)%20%3D%3E%20%7B%0A%20%20let%20k%20%3D%20(value%20-%200)%20%2F%2010%3B%20%2F%2F%200%20%3D%3Emin%20%20%26%26%2010%20%3D%3E%20MAX%0A%20%20return%20Math.ceil((1%20-%20k)%20*%20start%20%2B%20k%20*%20end)%20%25%20256%3B%0A%7D%3B%0A%0Aconst%20color%20%3D%20()%20%3D%3E%20%7B%0A%20%20let%20r%20%3D%20interpolate(255%2C%200)%3B%0A%20%20let%20g%20%3D%20interpolate(0%2C%20255)%3B%0A%20%20let%20b%20%3D%20interpolate(0%2C%200)%3B%0A%20%20return%20%60rgb(%24%7Br%7D%2C%24%7Bg%7D%2C%24%7Bb%7D)%60%3B%0A%7D%3B%0A%0Areturn%20(%0A%20%20%3C%3E%0A%20%20%20%20%3CText%20style%3D%7Bstyles.subHeader%7D%3EHorizontal%20Slider%3C%2FText%3E%0A%0A%20%20%20%20%3CView%20style%3D%7B%5Bstyles.contentView%5D%7D%3E%0A%20%20%20%20%20%20%3CSlider%0A%20%20%20%20%20%20%20%20value%3D%7Bvalue%7D%0A%20%20%20%20%20%20%20%20onValueChange%3D%7BsetValue%7D%0A%20%20%20%20%20%20%20%20maximumValue%3D%7B10%7D%0A%20%20%20%20%20%20%20%20minimumValue%3D%7B0%7D%0A%20%20%20%20%20%20%20%20step%3D%7B1%7D%0A%20%20%20%20%20%20%20%20allowTouchTrack%0A%20%20%20%20%20%20%20%20trackStyle%3D%7B%7B%20height%3A%205%2C%20backgroundColor%3A%20'transparent'%20%7D%7D%0A%20%20%20%20%20%20%20%20thumbStyle%3D%7B%7B%20height%3A%2020%2C%20width%3A%2020%2C%20backgroundColor%3A%20'transparent'%20%7D%7D%0A%20%20%20%20%20%20%20%20thumbProps%3D%7B%7B%0A%20%20%20%20%20%20%20%20%20%20children%3A%20(%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CIcon%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20name%3D%22heartbeat%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20type%3D%22font-awesome%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20size%3D%7B20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20reverse%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20containerStyle%3D%7B%7B%20bottom%3A%2020%2C%20right%3A%2020%20%7D%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20color%3D%7Bcolor()%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20)%2C%0A%20%20%20%20%20%20%20%20%7D%7D%0A%20%20%20%20%20%20%2F%3E%0A%20%20%20%20%20%20%3CText%20style%3D%7B%7B%20paddingTop%3A%2020%20%7D%7D%3EValue%3A%20%7Bvalue%7D%3C%2FText%3E%0A%20%20%20%20%3C%2FView%3E%0A%20%20%20%20%3CText%20style%3D%7Bstyles.subHeader%7D%3EVertical%20Slider%3C%2FText%3E%0A%20%20%20%20%3CView%20style%3D%7Bstyles.verticalContent%7D%3E%0A%20%20%20%20%20%20%3CSlider%0A%20%20%20%20%20%20%20%20value%3D%7BvertValue%7D%0A%20%20%20%20%20%20%20%20onValueChange%3D%7BsetVertValue%7D%0A%20%20%20%20%20%20%20%20maximumValue%3D%7B50%7D%0A%20%20%20%20%20%20%20%20minimumValue%3D%7B20%7D%0A%20%20%20%20%20%20%20%20step%3D%7B1%7D%0A%20%20%20%20%20%20%20%20orientation%3D%22vertical%22%0A%20%20%20%20%20%20%20%20thumbStyle%3D%7B%7B%20height%3A%2020%2C%20width%3A%2016%2C%20backgroundColor%3A%20'transparent'%20%7D%7D%0A%20%20%20%20%20%20%20%20thumbProps%3D%7B%7B%0A%20%20%20%20%20%20%20%20%20%20children%3A%20(%0A%20%20%20%20%20%20%20%20%20%20%20%20%3CIcon%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20name%3D%22heartbeat%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20type%3D%22font-awesome%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20size%3D%7B20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20reverse%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20containerStyle%3D%7B%7B%20bottom%3A%2020%2C%20right%3A%2020%20%7D%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20color%3D%22%23f50%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%3E%0A%20%20%20%20%20%20%20%20%20%20)%2C%0A%20%20%20%20%20%20%20%20%7D%7D%0A%20%20%20%20%20%20%2F%3E%0A%20%20%20%20%3C%2FView%3E%0A%20%20%20%20%3CText%20style%3D%7B%7B%20paddingLeft%3A%2025%20%7D%7D%3EValue%3A%20%7BvertValue%7D%3C%2FText%3E%0A%20%20%3C%2F%3E%0A)%3B%0A%7D%3B%0A%0Aconst%20styles%20%3D%20StyleSheet.create(%7B%0AcontentView%3A%20%7B%0A%20%20padding%3A%2020%2C%0A%20%20width%3A%20'100%25'%2C%0A%20%20justifyContent%3A%20'center'%2C%0A%20%20alignItems%3A%20'stretch'%2C%0A%7D%2C%0AverticalContent%3A%20%7B%0A%20%20padding%3A%2020%2C%0A%20%20flex%3A%201%2C%0A%20%20flexDirection%3A%20'row'%2C%0A%20%20height%3A%20500%2C%0A%20%20justifyContent%3A%20'center'%2C%0A%20%20alignItems%3A%20'stretch'%2C%0A%7D%2C%0AsubHeader%3A%20%7B%0A%20%20backgroundColor%20%3A%20%22%232089dc%22%2C%0A%20%20color%20%3A%20%22white%22%2C%0A%20%20textAlign%20%3A%20%22center%22%2C%0A%20%20paddingVertical%20%3A%205%2C%0A%20%20marginBottom%20%3A%2010%0A%7D%0A%7D)%3B%0A%0Aexport%20default%20Sliders%3B","data-snack-dependencies":"@rneui/themed,@rneui/base","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy"}))}u.isMDXComponent=!0;var p=n(24917),c=["components"],h={id:"slider",title:"Slider"},g=void 0,C={unversionedId:"components/slider",id:"components/slider",title:"Slider",description:"Sliders allow users to select a value from a fixed set of values using drag utility.",source:"@site/docs/components/Slider.mdx",sourceDirName:"components",slug:"/components/slider",permalink:"/docs/next/components/slider",draft:!1,editUrl:"https://github.com/react-native-elements/react-native-elements/edit/next/website/docs/components/Slider.mdx",tags:[],version:"current",frontMatter:{id:"slider",title:"Slider"},sidebar:"docs",previous:{title:"SearchBar",permalink:"/docs/next/components/searchbar"},next:{title:"Skeleton",permalink:"/docs/next/components/skeleton"}},A={},k=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"Playground",id:"playground",level:2}],v={toc:k};function b(e){var t=e.components,n=(0,r.Z)(e,c);return(0,i.kt)("wrapper",(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(l.w,{mdxType:"IconsStyle"}),(0,i.kt)("p",null,"Sliders allow users to select a value from a fixed set of values using drag utility."),(0,i.kt)("div",{class:"row inline-flex-center"},(0,i.kt)("div",{class:"col col--3"},(0,i.kt)("h4",null,"Import")),(0,i.kt)("div",{class:"col col--9"},(0,i.kt)(o.Z,{mdxType:"CodeBlock"},"import { Slider } from '@rneui/themed';")),(0,i.kt)("div",{class:"col col--3"},(0,i.kt)("h4",null,"Theme Key"," ",(0,i.kt)("a",{href:"../customizing#using-themeprovider"},(0,i.kt)(s.Fs0,{mdxType:"BiInfoCircle"})))),(0,i.kt)("div",{class:"col col--9"},(0,i.kt)(o.Z,{mdxType:"CodeBlock"},"Slider"))),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)(u,{mdxType:"Usage"}),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)("div",{class:"table-responsive"},(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"allowTouchTrack")),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:null},"If true, thumb will respond and jump to any touch along the track.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"animateTransitions")),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:null},"Set to true if you want to use the default 'spring' animation.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"animationConfig")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"TimingAnimationConfig")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"SpringAnimationConfig")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"{}")),(0,i.kt)("td",{parentName:"tr",align:null},"Used to configure the animation parameters. These are the same parameters in the ",(0,i.kt)("a",{parentName:"td",href:"https://reactnative.dev/docs/animations.html"},"Animated library"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"animationType")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"spring")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"timing")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"timing")),(0,i.kt)("td",{parentName:"tr",align:null},"Set to 'spring' or 'timing' to use one of those two types of animations with the default ",(0,i.kt)("a",{parentName:"td",href:"https://reactnative.dev/docs/animations.html"},"animation properties"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"containerStyle")),(0,i.kt)("td",{parentName:"tr",align:null},"Style"),(0,i.kt)("td",{parentName:"tr",align:null},"`StyleSheet.create({"),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("p",null,"containerHorizontal: {\nheight: 40,\njustifyContent: 'center',\n},\ncontainerVertical: {\nwidth: 40,\nflexDirection: 'column',\nalignItems: 'center',\n},\ntrack: {\nborderRadius: TRACK_SIZE / 2,\n},\ntrackHorizontal: {\nheight: TRACK_SIZE,\n},\ntrackVertical: {\nflex: 1,\nwidth: TRACK_SIZE,\n},\ntouchArea: {\nposition: 'absolute',\nbackgroundColor: 'transparent',\ntop: 0,\nleft: 0,\nright: 0,\nbottom: 0,\n},\ndebugThumbTouchArea: {\nposition: 'absolute',\nbackgroundColor: 'green',\nopacity: 0.5,\n},\n})",(0,i.kt)("inlineCode",{parentName:"p"},"|Apply style to the container of the slider.| |"),"debugTouchArea",(0,i.kt)("inlineCode",{parentName:"p"},"|boolean|"),"false",(0,i.kt)("inlineCode",{parentName:"p"},"|Set this to true to visually see the thumb touch rect in green.| |"),"disabled",(0,i.kt)("inlineCode",{parentName:"p"},"|boolean||If true the user won't be able to move the slider.| |"),"maximumTrackTintColor",(0,i.kt)("inlineCode",{parentName:"p"},"|string|"),"#b3b3b3",(0,i.kt)("inlineCode",{parentName:"p"},"|The color used for the track to the right of the button.| |"),"maximumValue",(0,i.kt)("inlineCode",{parentName:"p"},"|number|"),"1",(0,i.kt)("inlineCode",{parentName:"p"},"|Initial maximum value of the slider.| |"),"minimumTrackTintColor",(0,i.kt)("inlineCode",{parentName:"p"},"|string|"),"#3f3f3f",(0,i.kt)("inlineCode",{parentName:"p"},"|The color used for the track to the left of the button.| |"),"minimumValue",(0,i.kt)("inlineCode",{parentName:"p"},"|number|"),"0",(0,i.kt)("inlineCode",{parentName:"p"},"|Initial minimum value of the slider.| |"),"onSlidingComplete",(0,i.kt)("inlineCode",{parentName:"p"},"|(value: number) => void||Callback called when the user finishes changing the value (e.g. when the slider is released).| |"),"onSlidingStart",(0,i.kt)("inlineCode",{parentName:"p"},"|(value: number) => void||Callback called when the user starts changing the value (e.g. when the slider is pressed).| |"),"onValueChange",(0,i.kt)("inlineCode",{parentName:"p"},"|(value: number) => void||Callback continuously called while the user is dragging the slider.| |"),"orientation",(0,i.kt)("inlineCode",{parentName:"p"},"|"),"vertical",(0,i.kt)("inlineCode",{parentName:"p"},"\\|"),"horizontal",(0,i.kt)("inlineCode",{parentName:"p"},"|"),"horizontal",(0,i.kt)("inlineCode",{parentName:"p"},"|Set the orientation of the slider.| |"),"step",(0,i.kt)("inlineCode",{parentName:"p"},"|number|"),"0",(0,i.kt)("inlineCode",{parentName:"p"},"|Step value of the slider. The value should be between 0 and maximumValue - minimumValue).| |"),"style",(0,i.kt)("inlineCode",{parentName:"p"},"|View Style||The style applied to the slider container.| |"),"thumbProps",(0,i.kt)("inlineCode",{parentName:"p"},"|any||The props applied to the thumb. Uses "),"Component",(0,i.kt)("inlineCode",{parentName:"p"},"prop which can accept"),"Animated",(0,i.kt)("inlineCode",{parentName:"p"}," components.| |"),"thumbStyle",(0,i.kt)("inlineCode",{parentName:"p"},"|View Style||The style applied to the thumb.| |"),"thumbTintColor",(0,i.kt)("inlineCode",{parentName:"p"},"|string|"),"red",(0,i.kt)("inlineCode",{parentName:"p"},"|The color used for the thumb.| |"),"thumbTouchSize",(0,i.kt)("inlineCode",{parentName:"p"},"|Sizable|"),"{ width: THUMB_SIZE, height: THUMB_SIZE }",(0,i.kt)("inlineCode",{parentName:"p"},"|The size of the touch area that allows moving the thumb. The touch area has the same center as the visible thumb. This allows to have a visually small thumb while still allowing the user to move it easily.| |"),"trackStyle",(0,i.kt)("inlineCode",{parentName:"p"},"|View Style||The style applied to the track.| |"),"value`|number||Initial value of the slider.|")),(0,i.kt)("h2",{id:"playground"},"Playground"),(0,i.kt)(p.Z,{mdxType:"Play"}))}b.isMDXComponent=!0},33770:()=>{},72950:()=>{},54882:()=>{}}]);