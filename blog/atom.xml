<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://rnvikalpelements.thevikalp.com/blog</id>
    <title>React Native vElements Blog</title>
    <updated>2022-05-15T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://rnvikalpelements.thevikalp.com/blog"/>
    <subtitle>React Native vElements Blog</subtitle>
    <icon>https://rnvikalpelements.thevikalp.com/img/website/logo.png</icon>
    <entry>
        <title type="html"><![CDATA[React Native Elements 4.0]]></title>
        <id>https://rnvikalpelements.thevikalp.com/blog/2022/05/15/rneui-migration-guide</id>
        <link href="https://rnvikalpelements.thevikalp.com/blog/2022/05/15/rneui-migration-guide"/>
        <updated>2022-05-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[React Native Elements v4 introduces many features including few new components, fully typescript support and some breaking changes whose migration is being given below.]]></summary>
        <content type="html"><![CDATA[<div align="center"><img src="https://rnvikalpelements.thevikalp.com/img/website/seo.png"></div>
<div class="admonition admonition-info alert alert--info"><div class="admonition-content"><p>React Native Elements v4 introduces many features including few new components, fully typescript support and some breaking changes whose migration is being given below.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="migration-guide">Migration Guide<a href="https://rnvikalpelements.thevikalp.com/blog/2022/05/15/rneui-migration-guide#migration-guide" class="hash-link" aria-label="Direct link to Migration Guide" title="Direct link to Migration Guide">​</a></h2>
<p>Refer the <a href="https://rnvikalpelements.thevikalp.com/migration/migration-v3">migration guide</a> to migrate from v3 to v4.</p>]]></content>
        <author>
            <name>Arpit Bhalla</name>
            <email>arpitbhallay@proton.me</email>
            <uri>https://github.com/arpitbhalla</uri>
        </author>
        <author>
            <name>RNvE Core Team</name>
            <uri>http://twitter.com/rn_elements/</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Google Summer of Code'21 Arpit Bhalla]]></title>
        <id>https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla</id>
        <link href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla"/>
        <updated>2021-08-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[📑 Project Details]]></summary>
        <content type="html"><![CDATA[<div align="center"><img src="https://raw.githubusercontent.com/arpitBhalla/google-summer-of-code/master/assets//header.png"></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-project-details">📑 Project Details<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla#-project-details" class="hash-link" aria-label="Direct link to 📑 Project Details" title="Direct link to 📑 Project Details">​</a></h2>
<ul>
<li>
<p>Organization: <a href="https://github.com/react-native-elements" target="_blank" rel="noopener noreferrer">React Native Elements</a></p>
</li>
<li>
<p>Project: <a href="https://summerofcode.withgoogle.com/projects/#5514659471294464" target="_blank" rel="noopener noreferrer">Migrating Hooks, Tests &amp; APIs</a></p>
</li>
<li>
<p>Mentors: <a href="https://github.com/flyingcircle" target="_blank" rel="noopener noreferrer">Jeremy Hamilton</a>, <a href="https://github.com/pranshuchittora" target="_blank" rel="noopener noreferrer">Pranshu Chittora</a>, <a href="https://github.com/dhruvdutt" target="_blank" rel="noopener noreferrer">Dhruvdutt</a></p>
</li>
<li>
<p>Student: <a href="https://github.com/arpitBhalla" target="_blank" rel="noopener noreferrer">Arpit Bhalla</a></p>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-overview">🚀 Overview<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla#-overview" class="hash-link" aria-label="Direct link to 🚀 Overview" title="Direct link to 🚀 Overview">​</a></h2>
<p>The <strong>Google Summer of Code 2021</strong> has been a fantastic and cheerful learning experience for me over the past few months. I have learned a lot from the community, especially how to organize commits and write readable code. <strong>React Native Elements</strong> is an amazing community to work with, as mentors are really helpful and experienced. I had started contributing to React Native Elements from March 2021 and till now, I have 40+ commits (10,803 additions and 13,826 deletions) merged. Over the past few months, I had great exposure writing maintainable code, communicating with the mentors, etc. I had completed some of my work in the coding period started as some issues mentioned in my proposal had a high priority for the release.</p>
<div align="center"><img src="https://raw.githubusercontent.com/arpitBhalla/google-summer-of-code/master/assets//contri.png" width="900"></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-work-abstract">🚘 Work Abstract<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla#-work-abstract" class="hash-link" aria-label="Direct link to 🚘 Work Abstract" title="Direct link to 🚘 Work Abstract">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="refactor-components-to-use-pressable-api-3170">Refactor components to use <code>Pressable</code> API <a href="https://github.com/react-native-elements/react-native-elements/pull/3170" target="_blank" rel="noopener noreferrer">(#3170)</a><a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla#refactor-components-to-use-pressable-api-3170" class="hash-link" aria-label="Direct link to refactor-components-to-use-pressable-api-3170" title="Direct link to refactor-components-to-use-pressable-api-3170">​</a></h3>
<blockquote>
<p><code>Pressable</code> is preferred to <code>Touchable</code> components according to React Native official docs. <code>Pressable</code> component offers a more extensive and future-proof way of handling the touch-based inputs.</p>
</blockquote>
<ul>
<li>
<p><code>Touchable</code> Component:</p>
<ul>
<li>It includes the styles and effects that do not meet the platform interactions.</li>
<li>It does not support high-quality interaction experience on different platforms.</li>
</ul>
</li>
<li>
<p><code>Pressable</code> Component:</p>
<ul>
<li>It detects various types of interactions.</li>
<li>Its API provides direct access to the current state of interaction.</li>
<li>Its capabilities could be extended to include hover, blur, focus, and more.
<code>Pressable</code> contains a lot of new props and cool features such as:
delayLongPress: Duration in milliseconds from onPressIn by the time onLongPress is called.</li>
</ul>
</li>
</ul>
<p>Reference : <a href="https://medium.com/@mahyarmohammadi/react-native-pressable-vs-touchable-5fec6b332f15" target="_blank" rel="noopener noreferrer">Pressable vs. Touchable in React Native</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrate-tests-to-react-native-testing-library-3170">Migrate Tests to React Native Testing Library <a href="https://github.com/react-native-elements/react-native-elements/pull/3170" target="_blank" rel="noopener noreferrer">(#3170)</a><a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla#migrate-tests-to-react-native-testing-library-3170" class="hash-link" aria-label="Direct link to migrate-tests-to-react-native-testing-library-3170" title="Direct link to migrate-tests-to-react-native-testing-library-3170">​</a></h3>
<blockquote>
<p>Rather than tests focusing on the implementation (Enzyme), tests are more focused on user behavior (react-native-testing-library).</p>
</blockquote>
<p>Enzyme allows us to access the internal workings of your components. You can read and set the state, and we can mock children to make tests run faster. On the other hand, RN testing-library doesn't give us any access to the implementation details. It renders the components and provides utility methods to interact with them. The idea is that you should communicate with our application in the same way a user would. So rather than set the state of a component we reproduce the actions a user would do to reach that state.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="class-to-functions-migration">Class to Functions Migration<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla#class-to-functions-migration" class="hash-link" aria-label="Direct link to Class to Functions Migration" title="Direct link to Class to Functions Migration">​</a></h3>
<p>Some components like <strong>Image, ToolTip</strong> which further include SearchBar android &amp; SearchBar iOS were Class Components and the code was messy, These are migrated to Functional Components and added hooks like, useState, useEffect, useCallBack, which would increase performance.</p>
<ul>
<li><strong>Using classes</strong> - We need to describe lifecycle methods, state of the component, component’s methods that will change our state or work with the store. Also, we need to bind all the methods for the component instance. The component becomes large, and it becomes more difficult to read each time.</li>
<li><strong>Using hooks</strong> - We can get the state of the component so that it can be easily tested and reused. Now we can facilitate the exchange of links between components or our entire application - using hooks. Hooks allow you to encapsulate logic without affecting the hierarchy of components.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-my-contributions">🎊 My Contributions<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla#-my-contributions" class="hash-link" aria-label="Direct link to 🎊 My Contributions" title="Direct link to 🎊 My Contributions">​</a></h2>
<p>You can find all my contributions <a href="https://github.com/react-native-elements/react-native-elements/pulls?q=is%3Apr+author%3AarpitBhalla+sort%3Aupdated-desc+is%3Amerged" target="_blank" rel="noopener noreferrer">here</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-components">New components<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla#new-components" class="hash-link" aria-label="Direct link to New components" title="Direct link to New components">​</a></h3>
<ul>
<li><a href="https://github.com/react-native-elements/react-native-elements/pull/2867" target="_blank" rel="noopener noreferrer">LinearProgress (#2867)</a></li>
<li><a href="https://github.com/react-native-elements/react-native-elements/pull/2885" target="_blank" rel="noopener noreferrer">FAB (#2885)</a></li>
<li><a href="https://github.com/react-native-elements/react-native-elements/pull/2896" target="_blank" rel="noopener noreferrer">Speed dial (#2896)</a></li>
<li><a href="https://github.com/react-native-elements/react-native-elements/pull/2919" target="_blank" rel="noopener noreferrer">Tab &amp; TabItem (#2919)</a></li>
<li><a href="https://github.com/react-native-elements/react-native-elements-universe/pull/1" target="_blank" rel="noopener noreferrer">CircularSlider (#1)</a></li>
<li><a href="https://github.com/react-native-elements/react-native-elements/pull/2983" target="_blank" rel="noopener noreferrer">TabView &amp; TabView.Item (#2983)</a></li>
<li><a href="https://github.com/react-native-elements/react-native-elements/pull/2953" target="_blank" rel="noopener noreferrer">ListItem Accordion (#2953)</a></li>
<li><a href="https://github.com/react-native-elements/react-native-elements/pull/2982" target="_blank" rel="noopener noreferrer">ListItem Swipeable (#2982)</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="core-improvements">Core Improvements<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla#core-improvements" class="hash-link" aria-label="Direct link to Core Improvements" title="Direct link to Core Improvements">​</a></h3>
<ul>
<li><a href="https://github.com/react-native-elements/react-native-elements/pull/3101" target="_blank" rel="noopener noreferrer">Migrate build to Github Actions (#3101)</a></li>
<li><a href="https://github.com/react-native-elements/react-native-elements/pull/2930" target="_blank" rel="noopener noreferrer">Strict TypeScript (#2930)</a></li>
<li><a href="https://github.com/react-native-elements/react-native-elements/pull/2834" target="_blank" rel="noopener noreferrer">Removed ts-ignore and transformed to Functional Component (#2834)</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="documentation-redesigned-3108">Documentation redesigned <a href="https://github.com/react-native-elements/react-native-elements/pull/3108" target="_blank" rel="noopener noreferrer">(#3108)</a><a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla#documentation-redesigned-3108" class="hash-link" aria-label="Direct link to documentation-redesigned-3108" title="Direct link to documentation-redesigned-3108">​</a></h3>
<div align="center"><img src="https://raw.githubusercontent.com/arpitBhalla/google-summer-of-code/master/assets//website.png"></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="snack-player">Snack player<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla#snack-player" class="hash-link" aria-label="Direct link to Snack player" title="Direct link to Snack player">​</a></h3>
<p>It helps user to test the component from documentation</p>
<div align="center"><img src="https://raw.githubusercontent.com/arpitBhalla/google-summer-of-code/master/assets//snack.png"></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="vs-code-extension">VS Code extension<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla#vs-code-extension" class="hash-link" aria-label="Direct link to VS Code extension" title="Direct link to VS Code extension">​</a></h3>
<p>Auto imports components and auto complete syntax with component preview for React Native Elements.</p>
<div align="center"><img src="https://raw.githubusercontent.com/arpitBhalla/google-summer-of-code/master/assets//vscode.png"></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-whats-next">🚧 What's next?<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla#-whats-next" class="hash-link" aria-label="Direct link to 🚧 What's next?" title="Direct link to 🚧 What's next?">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-stack-component">New <code>Stack</code> Component<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/23/google-summer-of-code-arpitBhalla#new-stack-component" class="hash-link" aria-label="Direct link to new-stack-component" title="Direct link to new-stack-component">​</a></h3>
<p>Stack is concerned with one-dimensional layouts. <code>This is not yet in the priority</code> but it would help developers.</p>
<p>Example</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Stack</span><span class="token plain"> spacing</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Item</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Item</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">Item</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Item</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Item</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">Item</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Item</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Item</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">Item</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">Stack</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Arpit Bhalla</name>
            <email>arpitbhallay@proton.me</email>
            <uri>https://github.com/arpitbhalla</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Google Summer of Code'21 Khushal Agarwal]]></title>
        <id>https://rnvikalpelements.thevikalp.com/blog/2021/08/18/google-summer-of-code-khushal-agarwal</id>
        <link href="https://rnvikalpelements.thevikalp.com/blog/2021/08/18/google-summer-of-code-khushal-agarwal"/>
        <updated>2021-08-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Automatically generate documentation out of React/React Native Component]]></summary>
        <content type="html"><![CDATA[<div align="center"><a href="https://summerofcode.withgoogle.com/projects/#5690075263795200"><img src="https://pbs.twimg.com/media/EwIc141UUAUnA7x.png" width="650" alt="google-summer-of-code"></a><br><b><p></p><p>Automatically generate documentation out of React/React Native Component</p><p></p></b></div>
<p>This summer, I was pleased to get selected for Google Summer of Code'21 under the organization <a href="https://github.com/react-native-elements" target="_blank" rel="noopener noreferrer">React Native vElements</a>. Working under the organization, my project was to <strong>generate documentation automatically out of the UI components and present it in the Docusaurus website</strong>.</p>
<div align="center"><p><img decoding="async" loading="lazy" src="https://media.giphy.com/media/ZcKASxMYMKA9SQnhIl/giphy.gif" alt="enter image description here" class="img_ev3q"></p></div>
<p>The purpose of creating this repository is to maintain a report summary of my GSoC work and this may also serve as a guide for future GSoC aspirants and a reference to the developers and contributors to the project.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-abstract">📙 Abstract<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/18/google-summer-of-code-khushal-agarwal#-abstract" class="hash-link" aria-label="Direct link to 📙 Abstract" title="Direct link to 📙 Abstract">​</a></h2>
<p><a href="https://www.npmjs.com/package/react-native-elements" target="_blank" rel="noopener noreferrer">React Native vElements</a> is a cross-platform UI toolkit built on/for React Native. With a weekly download by 90k+ users and backed by a huge community, it provides UI components that can be used in your native application for the platform of Android/iOS/Web.</p>
<p>The documentation of the project was maintained manually previously i.e., suppose I want to change/add/remove a prop or a new component to the project the markdown file had to be changed manually. The process is tiring and new contributors may often forget to do so. So, during the summers I took the change this process and make a workflow such that the generation is automatic. This should be <strong>fast and maintainable</strong>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-deliverables">📝 Deliverables<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/18/google-summer-of-code-khushal-agarwal#-deliverables" class="hash-link" aria-label="Direct link to 📝 Deliverables" title="Direct link to 📝 Deliverables">​</a></h2>
<p>The deliverables of the project are as follows:</p>
<ul class="contains-task-list containsTaskList_mC6p">
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <!-- -->Efficient Development Setup</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <!-- -->Re-structure and Refactor code to have a common pattern.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <!-- -->Maintain the Usage/Examples of the component as they are needed to be updated manually.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <!-- -->Refactor and rename the directory structure such that Autogen is successful.<!-- -->
<ul>
<li>Convert the code-base to have all the functional components.</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <!-- -->Commenting on all the components and props.<!-- -->
<ul>
<li>Adding descriptions.</li>
<li>Adding prop descriptions.</li>
<li>Ensuring a common pattern is followed.</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <!-- -->Writing <strong>scripts to extract data out</strong>(in JS/TS) of it in the form of JSON.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <!-- -->Converting the JSON data to Markdown.</li>
<li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Automating the process such that the workflow works automatically whenever there is a change in the prop/definition or component code.</li>
</ul>
<p>All of the listed deliverables were completed within the GSoC period. 🎉</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-working-product">📦 Working product<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/18/google-summer-of-code-khushal-agarwal#-working-product" class="hash-link" aria-label="Direct link to 📦 Working product" title="Direct link to 📦 Working product">​</a></h2>
<p>The work can be found here - <a href="https://thevikalpui.netlify.app/docs/next/" target="_blank" rel="noopener noreferrer">Official Website of React Native vElements</a>. Please refer to the component docs.</p>
<p><strong>I have also written a blog on how it works attached <a href="https://deploy-preview-3145--react-native-elements.netlify.app/blog/2021/08/12/auto-generation-of-docs" target="_blank" rel="noopener noreferrer">here</a>.</strong></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-contributions">🚀 Contributions<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/18/google-summer-of-code-khushal-agarwal#-contributions" class="hash-link" aria-label="Direct link to 🚀 Contributions" title="Direct link to 🚀 Contributions">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="pull-requests">Pull requests<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/18/google-summer-of-code-khushal-agarwal#pull-requests" class="hash-link" aria-label="Direct link to Pull requests" title="Direct link to Pull requests">​</a></h3>
<table><thead><tr><th>PR Link</th><th>Description</th><th>Status</th></tr></thead><tbody><tr><td><a href="https://github.com/react-native-elements/react-native-elements/pull/3071" target="_blank" rel="noopener noreferrer">#3071</a></td><td>[Refactor] Documentation directory structure</td><td>Merged ✅</td></tr><tr><td><a href="https://github.com/react-native-elements/react-native-elements/pull/3081" target="_blank" rel="noopener noreferrer">#3081</a></td><td>[Refactor] Directory structure of components</td><td>Merged ✅</td></tr><tr><td><a href="https://github.com/react-native-elements/react-native-elements/pull/3112" target="_blank" rel="noopener noreferrer">#3112</a></td><td>[Add] props description, descriptions to the component.</td><td>Merged ✅</td></tr><tr><td><a href="https://github.com/react-native-elements/react-native-elements/pull/3126" target="_blank" rel="noopener noreferrer">#3126</a></td><td>[Docs] Added demos and snack for the documentation</td><td>Merged ✅</td></tr><tr><td><a href="https://github.com/react-native-elements/react-native-elements/pull/3136" target="_blank" rel="noopener noreferrer">#3136</a></td><td>[Add] Docgen auto generation of docs scripts</td><td>Merged ✅</td></tr><tr><td><a href="https://github.com/react-native-elements/react-native-elements/pull/3142" target="_blank" rel="noopener noreferrer">#3142</a></td><td>[Docs] Added generate-markdown scripts</td><td>Merged ✅</td></tr><tr><td><a href="https://github.com/react-native-elements/react-native-elements/pull/3143" target="_blank" rel="noopener noreferrer">#3143</a>, <a href="https://github.com/react-native-elements/react-native-elements/pull/3144" target="_blank" rel="noopener noreferrer">#3144</a></td><td>[Fix] Issues related to auto-generation of documentation</td><td>Merged ✅</td></tr><tr><td><a href="https://github.com/react-native-elements/react-native-elements/pull/3145" target="_blank" rel="noopener noreferrer">#3145</a></td><td>[Fix, Improve] Doc-gen issues and automation</td><td>Open(to be merged) 🕒</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="issues">Issues<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/18/google-summer-of-code-khushal-agarwal#issues" class="hash-link" aria-label="Direct link to Issues" title="Direct link to Issues">​</a></h3>
<table><thead><tr><th>Issue link</th><th>Description</th></tr></thead><tbody><tr><td><a href="https://github.com/react-native-elements/react-native-elements/issues/3171" target="_blank" rel="noopener noreferrer">#3171</a></td><td>[Docs] Auto-generation of documentation for class based components</td></tr></tbody></table>
<p>Apart from these contributions, I have contributed to other React native elements projects. They can be summarized as:</p>
<ul>
<li><a href="https://github.com/pulls?q=is:pr+org:react-native-elements+author:khushal87" target="_blank" rel="noopener noreferrer">Pull requests</a></li>
<li><a href="https://github.com/issues?q=is:issue+org:react-native-elements+author:khushal87" target="_blank" rel="noopener noreferrer">Issues</a></li>
</ul>
<table><thead><tr><th>Project</th><th>Reference</th></tr></thead><tbody><tr><td>React Native Elements - main repo</td><td><a href="https://github.com/react-native-elements/react-native-elements/pulls?q=is%3Apr+author%3Akhushal87+" target="_blank" rel="noopener noreferrer">Pull requests</a></td></tr><tr><td>React Native Elements App</td><td><a href="https://github.com/react-native-elements/react-native-elements-app/pulls?q=is%3Apr+author%3Akhushal87+is%3Aclosed" target="_blank" rel="noopener noreferrer">Pull requests</a></td></tr><tr><td>Playground</td><td><a href="https://github.com/react-native-elements/playground/pulls?q=is%3Apr+author%3Akhushal87+is%3Aclosed" target="_blank" rel="noopener noreferrer">Pull requests</a></td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-mentors">👨 Mentors<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/18/google-summer-of-code-khushal-agarwal#-mentors" class="hash-link" aria-label="Direct link to 👨 Mentors" title="Direct link to 👨 Mentors">​</a></h2>
<p>I would like to thank my mentors for helping me reach this milestone. 😄😄</p>
<p>I have not only learned about the Open Source culture and how to write good code but also, learned how the industry works and the import</p>
<ul>
<li><strong>Dhruvdutt Jadhav</strong> - <a href="https://github.com/dhruvdutt" target="_blank" rel="noopener noreferrer">GitHub</a>. <a href="https://www.linkedin.com/in/dhruvdutt-jadhav/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li>
<li><strong>Pranshu Chittora</strong> - <a href="https://github.com/pranshuchittora" target="_blank" rel="noopener noreferrer">GitHub</a>. <a href="https://www.linkedin.com/in/pranshuchittora/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li>
<li><strong>Jeremy Hamilton</strong> - <a href="https://github.com/flyingcircle" target="_blank" rel="noopener noreferrer">GitHub</a>. <a href="https://www.linkedin.com/in/jeremy-hamilton-19b6217b/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li>
</ul>
<p>I would also like to thank <a href="https://github.com/arpitBhalla" target="_blank" rel="noopener noreferrer">Arpit Bhalla</a> for being an amazing partner in this amazing journey.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-links">🔗 Links<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/18/google-summer-of-code-khushal-agarwal#-links" class="hash-link" aria-label="Direct link to 🔗 Links" title="Direct link to 🔗 Links">​</a></h2>
<div align="center"><table><thead><tr><th style="text-align:left"><strong>Student</strong></th><th style="text-align:center">Khushal Agarwal</th></tr></thead><tbody><tr><td style="text-align:left"><strong>Organization</strong></td><td style="text-align:center"><a href="https://github.com/react-native-elements/" target="_blank" rel="noopener noreferrer">React Native Elements</a></td></tr><tr><td style="text-align:left"><strong>Project</strong></td><td style="text-align:center"><a href="https://summerofcode.withgoogle.com/projects/#5690075263795200" target="_blank" rel="noopener noreferrer">Automatically generate documentation from components</a></td></tr><tr><td style="text-align:left"><strong>GitHub</strong></td><td style="text-align:center"><a href="https://github.com/khushal87" target="_blank" rel="noopener noreferrer">khushal87</a></td></tr><tr><td style="text-align:left"><strong>LinkedIn</strong></td><td style="text-align:center"><a href="https://www.linkedin.com/in/khushal87" target="_blank" rel="noopener noreferrer">Khushal Agarwal</a></td></tr><tr><td style="text-align:left"><strong>Twitter</strong></td><td style="text-align:center"><a href="https://www.twitter.com/khushal87" target="_blank" rel="noopener noreferrer">khushal87</a></td></tr><tr><td style="text-align:left"><strong>Email</strong></td><td style="text-align:center"><a href="mailto:khushal.agarwal987@gmail.com"></a><a href="mailto:khushal.agarwal987@gmail.com" target="_blank" rel="noopener noreferrer">khushal.agarwal987@gmail.com</a></td></tr></tbody></table></div>]]></content>
        <author>
            <name>Khushal Agarwal</name>
            <uri>https://github.com/khushal87</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Auto-generation of Documentation Website]]></title>
        <id>https://rnvikalpelements.thevikalp.com/blog/2021/08/12/auto-generation-of-docs</id>
        <link href="https://rnvikalpelements.thevikalp.com/blog/2021/08/12/auto-generation-of-docs"/>
        <updated>2021-08-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This is a guide to generate documentation of the UI components automatically.]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>This is a guide to generate documentation of the UI components automatically.</p>
</blockquote>
<p>Initially when this workflow was not present, the entire documentation of the website was done by editing the docs manually by going to the <code>docs</code> directory under <code>website</code> and editing the markdown manually. Now, we have come with a flow where developers and contributors can focus more on logic than on writing markdown.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="workflow">Workflow<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/12/auto-generation-of-docs#workflow" class="hash-link" aria-label="Direct link to Workflow" title="Direct link to Workflow">​</a></h2>
<p>To do this we have created scripts which would parse the components and generate documentation out of it.</p>
<p>This is a 2 step process:</p>
<ol>
<li>
<p>We take use of <code>react-docgen-typescript</code> which takes the input of the files for which we want to generate the documentation automatically. This gives in JSON as output. This JSON consists of all the details of the props including <code>type</code>, <code>name</code>, <code>description</code> and <code>defaultValue</code> and well as <code>description</code> of the components.</p>
</li>
<li>
<p>As we use Docusaurus for our documentation website, the pages of the documentation should be in the format of Markdown. Therefore, there should be process where we can change the JSON data, which we get from <code>react-docgen-typescript</code> to a suitable Markdown format. For this we use, <code>json2md</code> which takes in the data and convert it to suitable markdown string. This is stored in the directory and is shown on the website.</p>
</li>
</ol>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-does-this-work">How does this work<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/12/auto-generation-of-docs#how-does-this-work" class="hash-link" aria-label="Direct link to How does this work" title="Direct link to How does this work">​</a></h4>
<p>Well to make the script to work automatically what we have done is as follows:</p>
<ol>
<li>
<p>When you push your changes to your branch. A script <code>updateDocumentation.js</code> runs.</p>
</li>
<li>
<p>This invokes the <code>yarn docs-build</code> command which calls the scripts of auto-generation of docs and this also <em>lints</em> the markdown files generated at the same time.</p>
</li>
<li>
<p>Now, if there is any changes in the markdown files. A commit with message <code>Update Documentation</code> is done and pushed after your commit is done to the branch.</p>
</li>
</ol>
<p><strong>Note:</strong> By passing pre-push hook will result in failure of documentation update and may lead maintainers to close your PR.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="updating-existing-components">Updating existing components<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/12/auto-generation-of-docs#updating-existing-components" class="hash-link" aria-label="Direct link to Updating existing components" title="Direct link to Updating existing components">​</a></h2>
<p>This is simple. Adding, removing, updating the props is also simple now. You just need to update the comments/description of the component and deal with the logic of your React Components(if required). Our workflow will automatically detect the markdown changes if any and push the changes using <code>pre-push</code> hooks while you push your code to your branch.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="adding-new-components">Adding new components<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/12/auto-generation-of-docs#adding-new-components" class="hash-link" aria-label="Direct link to Adding new components" title="Direct link to Adding new components">​</a></h2>
<p>Trust me this is easy. We have designed the workflow such that, you only need to work on your JavaScript/TypeScript logic, without bothering about updating the markdown files. The input to the docgenParser is automatic and doesn't require any aditional cofiguration.</p>
<p><strong>Make sure to add appropriate comments and description related to the components and the props of the component. Try keeping your code simple with simpler types for Autogen to work.</strong></p>
<p><strong>Please note:</strong> The file name of the component as well as the folder must be in Capital letter. We use <code>regex</code> to parse the file paths, so this is important.</p>
<p><strong>Note</strong>: If there are complex types/defaultValue, please head to <code>website/scripts/docgen/docgenParser.ts</code> to deal with those cases. Although we recommend you to avoid it as far as possible. Try improving the React logic and that will work.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-add-a-new-demo-for-the-component">How to add a new demo for the component?<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/12/auto-generation-of-docs#how-to-add-a-new-demo-for-the-component" class="hash-link" aria-label="Direct link to How to add a new demo for the component?" title="Direct link to How to add a new demo for the component?">​</a></h2>
<p>The demos can now be added by moving in to the <code>usage</code> directory under <code>website/docs/main</code> directory. We now have added Snack Player so that you get the glimpse of the component and also get to know how it works. Under the <code>usage</code>, there is a separate folder for each UI Component, where you can add Usage related to component and relevant descriptions.</p>
<p><strong>Note</strong>: To add Snack demo, add it inside the snack directory. You can add as many Snack which will make our repository more helpful for developers.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="testing-the-changes">Testing the changes<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/12/auto-generation-of-docs#testing-the-changes" class="hash-link" aria-label="Direct link to Testing the changes" title="Direct link to Testing the changes">​</a></h2>
<p>For testing the changes in the documentation autogeneration, we simply need to run the following commands in sequence.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd website</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yarn test</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We have also included the changes in the main test process, so this will automatically run with the workflow as well as when you run the <code>yarn test</code> command from root of the project.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="future">Future<a href="https://rnvikalpelements.thevikalp.com/blog/2021/08/12/auto-generation-of-docs#future" class="hash-link" aria-label="Direct link to Future" title="Direct link to Future">​</a></h2>
<p>Some of the components are class-based. They are: Input, SearchBar, Rating.(from <a href="https://github.com/Monte9/react-native-ratings" target="_blank" rel="noopener noreferrer">https://github.com/Monte9/react-native-ratings</a>). If you change the components to Functional/hooks based please remove it from the array of <code>filesToExclude</code> under <code>website/scripts/docgen/getComponentFiles.ts</code>. These are the paths of the component files for which the process is still manual.</p>
<p>So, generating the documentation doesn't come up well for these components. Due to the existing structure <code>react-docgen-typescript</code> fails to generate relevant result for them. We are therefore looking for contributions on these components to make them Fuctional/Hooks based.</p>
<p>Thanks. Hope you like the new workflow. Looking forward for improvements and contributions to it.</p>]]></content>
        <author>
            <name>Khushal Agarwal</name>
            <uri>https://github.com/khushal87</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Version 2.3 Upgrade Guide]]></title>
        <id>https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide</id>
        <link href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide"/>
        <updated>2020-08-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[There have been a lot of changes and improvements coming through the pipeline recently with react-native-elements. So in preparing for a version 3, there are some planned deprecations that will be added into version 2.3 and then removed in version 3.]]></summary>
        <content type="html"><![CDATA[<p>There have been a lot of changes and improvements coming through the pipeline recently with <code>react-native-elements</code>. So in preparing for a version 3, there are some planned deprecations that will be added into version 2.3 and then removed in version 3.</p>
<p>The reason for these changes is that <code>react-native-elements</code> regularly gets requests for new features and enhancements quite frequently. The fast and easy method of adding these new features is usually to add another prop into the component that then injects some change into a child component. Unfortunately, this ends up leading to the components having a lot of props, lots of conditional code, and additional code complexity. The solution going forward and into version 3 will be to break down large components into smaller pieces so that it is easier to inject your own code without having to wait for an additional prop to be added.</p>
<p>As we continue to build up to version 3, this post will continue to be updated with new step-by-step directions on how to upgrade your code to work around these changes. The RNE team thanks you for your patience, and we hope that you see the value in the upcoming changes.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="avatar">Avatar<a href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide#avatar" class="hash-link" aria-label="Direct link to Avatar" title="Direct link to Avatar">​</a></h2>
<p><code>accessory</code>, <code>showAccessory</code>, and <code>accessoryProps</code> are all being dprecated. There is now a child component <code>Avatar.Accessory</code> that you insert as a child component instead.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Avatar</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Avatar</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">Accessory</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain">accessoryProps</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">Avatar</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="listitem">ListItem<a href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide#listitem" class="hash-link" aria-label="Direct link to ListItem" title="Direct link to ListItem">​</a></h2>
<p><code>ListItem</code> has a large number of deprecated props. <code>ListItem</code> has been somewhat of a kitchen sink. All the props can be replaced by inserting them as children in the order of left to right as they appear on the screen.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="leftelement-lefticon-leftavatar-rightelement-righticon-rightavatar">leftElement, leftIcon, leftAvatar, rightElement, rightIcon, rightAvatar<a href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide#leftelement-lefticon-leftavatar-rightelement-righticon-rightavatar" class="hash-link" aria-label="Direct link to leftElement, leftIcon, leftAvatar, rightElement, rightIcon, rightAvatar" title="Direct link to leftElement, leftIcon, leftAvatar, rightElement, rightIcon, rightAvatar">​</a></h3>
<p>These can be replaced by using <code>Text</code>, <code>Icon</code>, and <code>Avatar</code> components respectively.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="title-titlestyle-titleprops-subtitle-subtitleprops-subtitlestyle">title, titleStyle, titleProps, subtitle, subtitleProps, subtitleStyle<a href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide#title-titlestyle-titleprops-subtitle-subtitleprops-subtitlestyle" class="hash-link" aria-label="Direct link to title, titleStyle, titleProps, subtitle, subtitleProps, subtitleStyle" title="Direct link to title, titleStyle, titleProps, subtitle, subtitleProps, subtitleStyle">​</a></h3>
<p>These props can be replaced by <code>ListItem.Content</code>, <code>ListItem.Title</code> and <code>ListItem.Subtitle</code></p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">ListItem</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">ListItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">Content</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">ListItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">Title</span><span class="token plain"> style</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">titleStyle</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain">titleProps</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">title</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">ListItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">Title</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">ListItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">Content</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">ListItem</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="contentcontainerstyle-rightcontentcontainerstyle">contentContainerStyle, rightContentContainerStyle<a href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide#contentcontainerstyle-rightcontentcontainerstyle" class="hash-link" aria-label="Direct link to contentContainerStyle, rightContentContainerStyle" title="Direct link to contentContainerStyle, rightContentContainerStyle">​</a></h3>
<p>These props should be placed in the <code>style</code> prop of <code>ListItem.Content</code>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="righttitle-righttitlestyle-righttitleprops-rightsubtitle-rightsubtitlestyle-rightsubtitleprops">rightTitle, rightTitleStyle, rightTitleProps, rightSubtitle, rightSubtitleStyle, rightSubtitleProps<a href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide#righttitle-righttitlestyle-righttitleprops-rightsubtitle-rightsubtitlestyle-rightsubtitleprops" class="hash-link" aria-label="Direct link to rightTitle, rightTitleStyle, rightTitleProps, rightSubtitle, rightSubtitleStyle, rightSubtitleProps" title="Direct link to rightTitle, rightTitleStyle, rightTitleProps, rightSubtitle, rightSubtitleStyle, rightSubtitleProps">​</a></h3>
<p>These props also use <code>ListItem.Content</code>, <code>ListItem.Title</code>, and <code>ListItem.Subtitle</code>. Simply add the prop <code>right</code> to each one.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">ListItem</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">ListItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">Content</span><span class="token plain"> right</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">ListItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">Title</span><span class="token plain"> right style</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">titleStyle</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain">titleProps</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">title</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">ListItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">Title</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">ListItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">Content</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">ListItem</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="input-buttongroup-switchprops-checkbox-badge-chevron-checkmark">input, buttonGroup, switchProps, checkBox, badge, chevron, checkmark<a href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide#input-buttongroup-switchprops-checkbox-badge-chevron-checkmark" class="hash-link" aria-label="Direct link to input, buttonGroup, switchProps, checkBox, badge, chevron, checkmark" title="Direct link to input, buttonGroup, switchProps, checkBox, badge, chevron, checkmark">​</a></h3>
<p>The <code>input</code> prop can be replaced with <code>ListItem.Input</code>.</p>
<p>The <code>buttonGroup</code> prop can be replaced with <code>ListItem.ButtonGroup</code>.</p>
<p>The <code>switchProps</code> prop can be replaced with <code>react-native</code>'s <code>Switch</code>.</p>
<p>The <code>checkBox</code> prop can be replaced with <code>ListItem.CheckBox</code>.</p>
<p>The <code>badge</code> prop can be replaced with <code>Badge</code>.</p>
<p>The <code>chevron</code> prop can be replaced with <code>ListItem.Chevron</code>.</p>
<p>The <code>checkmark</code> prop can be replaced with :</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Icon</span><span class="token plain"> name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"check"</span><span class="token plain"> size</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="card">Card<a href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide#card" class="hash-link" aria-label="Direct link to Card" title="Direct link to Card">​</a></h2>
<p>For <code>Card</code> the following props have all been deprecated: <code>title</code>, <code>titleStyle</code>, <code>titleNumberOfLines</code>, <code>dividerStyle</code>, <code>image</code>, <code>imageStyle</code>, <code>imageProps</code>, <code>imageWrapperStyle</code>, <code>featuredTitle</code>, <code>featuredTitleStyle</code>, <code>featuredSubtitle</code>, <code>featuredSubtitleStyle</code></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="title-titlestyle-titlenumberoflines">title, titleStyle, titleNumberOfLines<a href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide#title-titlestyle-titlenumberoflines" class="hash-link" aria-label="Direct link to title, titleStyle, titleNumberOfLines" title="Direct link to title, titleStyle, titleNumberOfLines">​</a></h3>
<p>Move these props into <code>Card.Title</code></p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Card</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Card</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">Title</span><span class="token plain"> style</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">titleStyle</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> numberOfLines</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">titleNumberOfLines</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">title</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">Card</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">Title</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">Card</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dividerstyle">dividerStyle<a href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide#dividerstyle" class="hash-link" aria-label="Direct link to dividerStyle" title="Direct link to dividerStyle">​</a></h3>
<p>The divider and the <code>dividerStyle</code> itself were moved into <code>Card.Divider</code></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="image-imagestyle-imageprops-imagewrapperstyle">image, imageStyle, imageProps, imageWrapperStyle<a href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide#image-imagestyle-imageprops-imagewrapperstyle" class="hash-link" aria-label="Direct link to image, imageStyle, imageProps, imageWrapperStyle" title="Direct link to image, imageStyle, imageProps, imageWrapperStyle">​</a></h3>
<p>These can be replaced with <code>Card.Image</code> which accepts all <code>Image</code> props. <code>imageWrapperStyle</code> can be attached to a <code>View</code> that wraps the <code>Image</code></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="featuredtitle-featuredtitlestyle-featuredsubtitle-featuredsubtitlestyle">featuredTitle, featuredTitleStyle, featuredSubtitle, featuredSubtitleStyle<a href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide#featuredtitle-featuredtitlestyle-featuredsubtitle-featuredsubtitlestyle" class="hash-link" aria-label="Direct link to featuredTitle, featuredTitleStyle, featuredSubtitle, featuredSubtitleStyle" title="Direct link to featuredTitle, featuredTitleStyle, featuredSubtitle, featuredSubtitleStyle">​</a></h3>
<p>These were both replaced with <code>Card.FeaturedTitle</code> and <code>Card.FeaturedSubtitle</code></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="bottomsheet">BottomSheet<a href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide#bottomsheet" class="hash-link" aria-label="Direct link to BottomSheet" title="Direct link to BottomSheet">​</a></h2>
<p><code>BottomSheet</code> was added in version 2.2, and it was noted that it had some strict dependencies that weren't so well liked. So <code>BottomSheet</code> has changed completely and it is encouraged that you checkout the docs page on it again.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="dark-mode">Dark Mode<a href="https://rnvikalpelements.thevikalp.com/blog/2020/08/10/2.3-upgrade-guide#dark-mode" class="hash-link" aria-label="Direct link to Dark Mode" title="Direct link to Dark Mode">​</a></h2>
<p>Make sure to checkout the customization page. We added a dark mode configuration to the <code>ThemeProvider</code> that should help out in bootstrapping your app's dark mode.</p>]]></content>
        <author>
            <name>Core Team</name>
            <uri>https://opencollective.com/react-native-elements#team</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[React Native vElements 1.0]]></title>
        <id>https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release</id>
        <link href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release"/>
        <updated>2019-01-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[React Native vElements has UI elements that are easy to use & really customizable. It also has theming, platform specific search bars, React Native Web support, and much more.]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>React Native vElements has UI elements that are easy to use &amp; really customizable. It also has theming, platform specific search bars, <a href="https://github.com/necolas/react-native-web" target="_blank" rel="noopener noreferrer">React Native Web</a> support, and much more.</p>
</blockquote>
<p>It's finally here! Let's put our hands together and welcome React Native vElements 1.0 🎉</p>
<p>This release is centered around making RNE components that everyone loves more intuitive to use &amp; stable. This is not to say that all the work is done, but this is definitely a giant leap in the right direction and one that we have been working on for over a year.</p>
<p>I want like to say thank you to our users for using RNE and giving us feedback through issues on the repo and also the contributors who have the taken time to contribute and help improve RNE together. Finally, I'd like to say a big thanks to <a href="https://twitter.com/roach_iam" target="_blank" rel="noopener noreferrer">Kyle Roach</a> and <a href="https://twitter.com/xaviervllgr" target="_blank" rel="noopener noreferrer">Xavier Villelégier</a> without whom this project would not have been as awesome as it is today!!</p>
<p>This blog post is meant to serve as a migration guide for upgrading to <code>react-native-elements: "^1.0.0"</code> from <code>0.19.1</code> and also a way to document and share all the breaking changes, new features and other improvements in this release. For those updating from <code>1.0.0-beta7</code> you can view those release notes <a href="https://github.com/react-native-elements/react-native-elements/releases/tag/v1.0.0" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>The wait is over!! Get excited, cause we certainly are. 14K 🌟 and counting...</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="installation">Installation<a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#installation" class="hash-link" aria-label="Direct link to Installation" title="Direct link to Installation">​</a></h2>
<p>First, install the library using your favorite package manager: <code>yarn add react-native-elements</code></p>
<p>Also if you are using an older version, just update the <code>react-native-elements</code> version in <code>package.json</code> to <code>^1.0.0</code></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="breaking-changes">Breaking changes<a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#breaking-changes" class="hash-link" aria-label="Direct link to Breaking changes" title="Direct link to Breaking changes">​</a></h2>
<ul>
<li>
<p>Updated all components that have the <code>component</code> prop to <code>Component</code> prop as per convention (<a href="https://github.com/react-native-elements/react-native-elements/pull/1479" target="_blank" rel="noopener noreferrer">#1479</a>)</p>
</li>
<li>
<p>Some colors have been removed from the colors file and some changed. Here's the list of colors from 0.19.1.</p>
</li>
</ul>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">primary</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#9E9E9E'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">primary1</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#4d86f7'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">primary2</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#6296f9'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">secondary</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#8F0CE8'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">secondary2</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#00B233'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">secondary3</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#00FF48'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">grey0</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#393e42'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">grey1</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#43484d'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">grey2</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#5e6977'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">grey3</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#86939e'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">grey4</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#bdc6cf'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">grey5</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#e1e8ee'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">dkGreyBg</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#232323'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">greyOutline</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#bbb'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">searchBg</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#303337'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">disabled</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#dadee0'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">white</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#ffffff'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">error</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#ff190c'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="avatar"><code>Avatar</code><a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#avatar" class="hash-link" aria-label="Direct link to avatar" title="Direct link to avatar">​</a></h3>
<ul>
<li>Props <code>small</code>, <code>medium</code>, <code>large</code>, <code>xlarge</code> have been removed. Usage is now <code>size="small"</code> etc. <a href="https://github.com/react-native-elements/react-native-elements/pull/1098" target="_blank" rel="noopener noreferrer">#1098</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="badge"><code>Badge</code><a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#badge" class="hash-link" aria-label="Direct link to badge" title="Direct link to badge">​</a></h3>
<ul>
<li><code>wrapperStyle</code> prop has been removed - use <code>containerStyle</code> prop instead (<a href="https://github.com/react-native-elements/react-native-elements/pull/1545" target="_blank" rel="noopener noreferrer">#1545</a>)</li>
<li><code>badgeStyle</code> prop replaces previous behaviour of <code>containerStyle</code> prop (<a href="https://github.com/react-native-elements/react-native-elements/pull/1545" target="_blank" rel="noopener noreferrer">#1545</a>)</li>
<li><code>element</code> prop which was undocumented is removed - use <code>value</code> prop instead (<a href="https://github.com/react-native-elements/react-native-elements/pull/1545" target="_blank" rel="noopener noreferrer">#1545</a>)</li>
<li>can no longer render children - instead use <code>value</code> prop which now supports rendering react components (<a href="https://github.com/react-native-elements/react-native-elements/pull/1545" target="_blank" rel="noopener noreferrer">#1545</a>)</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="button"><code>Button</code><a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#button" class="hash-link" aria-label="Direct link to button" title="Direct link to button">​</a></h3>
<ul>
<li>By default on Android there's no more elevation (<a href="https://github.com/react-native-elements/react-native-elements/pull/1538" target="_blank" rel="noopener noreferrer">#1538</a>). To get elevation, use the <code>raised</code> prop.</li>
<li>Renamed <code>textStyle</code> to <code>titleStyle</code></li>
<li>Renamed <code>containerViewStyle</code> to <code>containerStyle</code></li>
<li>Removed props <code>transparent</code> and <code>outline</code> (<a href="https://github.com/react-native-elements/react-native-elements/pull/1540" target="_blank" rel="noopener noreferrer">#1540</a>). Instead use the <code>type</code> prop.</li>
</ul>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Transparent</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">type</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">clear</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Outline</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">type</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">outline</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>Removed props <code>secondary</code>, <code>secondary2</code>, <code>secondary3</code>, <code>primary1</code>, <code>primary2</code>, <code>backgroundColor</code>. Use the <code>buttonStyle</code> prop to set the background color.</li>
<li>Removed <code>iconComponent</code> prop. If you want to use a different Icon component - the <code>icon</code> prop supports custom elements.</li>
<li>Removed <code>loadingRight</code> prop. Loading indicator <strong>displays without title</strong>. May re-add in future.</li>
<li>Removed <code>borderRadius</code> prop. To control the border radius use the <code>buttonStyle</code> prop.</li>
<li>Removed props <code>color</code>, <code>fontSize</code>, <code>fontWeight</code>, and <code>fontFamily</code>. Instead use the <code>titleStyle</code> prop to set attributes for the title.</li>
<li>Removed <code>large</code> prop. May re-add in future.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="buttongroup"><code>ButtonGroup</code><a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#buttongroup" class="hash-link" aria-label="Direct link to buttongroup" title="Direct link to buttongroup">​</a></h3>
<ul>
<li><code>disableSelected</code> prop has been removed (<a href="https://github.com/react-native-elements/react-native-elements/pull/1587" target="_blank" rel="noopener noreferrer">#1587</a>)</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="card"><code>Card</code><a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#card" class="hash-link" aria-label="Direct link to card" title="Direct link to card">​</a></h3>
<ul>
<li><code>fontFamily</code> prop is deprecated - instead use <code>titleStyle</code> prop (<a href="https://github.com/react-native-elements/react-native-elements/pull/1587" target="_blank" rel="noopener noreferrer">#1659</a>)</li>
<li><code>flexDirection</code> prop is deprecated - instead use <code>wrapperStyle</code> prop (<a href="https://github.com/react-native-elements/react-native-elements/pull/1587" target="_blank" rel="noopener noreferrer">#1659</a>)</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="form"><code>Form</code><a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#form" class="hash-link" aria-label="Direct link to form" title="Direct link to form">​</a></h3>
<ul>
<li>
<p><code>FormInput</code> been renamed to <code>Input</code> (<a href="https://github.com/react-native-elements/react-native-elements/pull/497" target="_blank" rel="noopener noreferrer">#497</a>)</p>
<ul>
<li><code>clearText</code> method renamed to <code>clear</code></li>
<li><code>textInputRef</code> and <code>containerRef</code> props removed</li>
<li><code>normalizeFontSize</code> prop removed. You can use the <code>normalize</code> helper along with the <code>inputStyle</code> prop to normalize font sizes.</li>
</ul>
</li>
<li>
<p><code>FormLabel</code> has been removed. This is now built into the <code>Input</code> component by use of <code>label</code> prop. Props <code>labelStyle</code> and <code>labelProps</code> can be used to customize it.</p>
</li>
<li>
<p><code>FormValidationMessage</code> has been removed. This is now built into the <code>Input</code> component by use of <code>errorMessage</code> prop. Props <code>errorStyle</code> and <code>errorProps</code> can be used to customize it.</p>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="header"><code>Header</code><a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#header" class="hash-link" aria-label="Direct link to header" title="Direct link to header">​</a></h3>
<ul>
<li>Props <code>innerContainerStyles</code>, <code>outerContainerStyles</code> removed <a href="https://github.com/react-native-elements/react-native-elements/pull/1221" target="_blank" rel="noopener noreferrer">#1221</a>. Instead use the <code>containerStyle</code> prop for main styling, along with props <code>leftContainerStyle</code>, <code>centerContainerStyle</code>, and <code>rightContainerStyle</code> when needed.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="searchbar"><code>SearchBar</code><a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#searchbar" class="hash-link" aria-label="Direct link to searchbar" title="Direct link to searchbar">​</a></h3>
<p>SearchBar now supports different platform styles! To get an iOS or Android themed SearchBar, use the <code>platform</code> prop. <code>platform="ios"</code> or <code>platform="android"</code></p>
<ul>
<li><code>noIcon</code> prop removed. Instead to remove the search icon use the <code>searchIcon</code> prop. E.g <code>searchIcon={null}</code></li>
<li><code>showLoadingIcon</code> prop renamed to <code>showLoading</code> <a href="https://github.com/react-native-elements/react-native-elements/pull/837" target="_blank" rel="noopener noreferrer">#837</a></li>
<li><code>containerRef</code> prop removed</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="list"><code>List</code><a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#list" class="hash-link" aria-label="Direct link to list" title="Direct link to list">​</a></h3>
<ul>
<li><strong><code>List</code> component has been removed!</strong> <code>List</code> was just a regular React Native View with some small margin styles. It wasn't actually needed to use the <code>ListItem</code> component. Instead we recommend using the <a href="https://reactnative.dev/docs/flatlist" target="_blank" rel="noopener noreferrer"><code>FlatList</code></a> or <a href="https://reactnative.dev/docs/sectionlist" target="_blank" rel="noopener noreferrer"><code>SectionList</code></a> components from React Native which function both as Views and also displaying items, pull to refresh and more.</li>
<li>If you want to apply the same styles that the <code>List</code> component provided prior to 1.0, <a href="https://github.com/react-native-elements/react-native-elements/issues/1565#issuecomment-436982251" target="_blank" rel="noopener noreferrer">see this comment</a>.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="listitem"><code>ListItem</code><a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#listitem" class="hash-link" aria-label="Direct link to listitem" title="Direct link to listitem">​</a></h3>
<ul>
<li><code>leftIconOnPress</code>, <code>leftIconOnLongPress</code>, <code>leftIconUnderlayColor</code>, and <code>leftIconContainerStyle</code>, removed. The <code>leftIcon</code> prop can accept props.</li>
</ul>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">ListItem</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">title</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">Yea</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">leftIcon</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">name</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">'home'</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript function-variable function" style="color:#d73a49">onPress</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript function" style="color:#d73a49">alert</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript string" style="color:#e3116c">'hello'</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f"></span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li><code>avatar</code>, <code>avatarStyle</code>, <code>avatarContainerStyle</code>, <code>roundAvatar</code>, and <code>avatarOverlayContainerStyle</code> removed. Avatars can now be customized using the <code>rightAvatar</code> and <code>leftAvatar</code> props which can either render a custom element or an object that describes the props from Avatar.</li>
</ul>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">ListItem</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">leftAvatar</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">title</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">'MD'</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">rounded</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript boolean" style="color:#36acaa">false</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">containerStyle</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">margin</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">5</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    </span><span class="token tag script language-javascript function-variable function" style="color:#d73a49">onPress</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript function" style="color:#d73a49">alert</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript string" style="color:#e3116c">'hey'</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">  </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">rightAvatar</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">title</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">'DW'</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript function-variable function" style="color:#d73a49">onLongPress</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript function" style="color:#d73a49">alert</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript string" style="color:#e3116c">'hey'</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f"></span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li><code>wrapperStyle</code> prop removed. Use the <code>containerStyle</code> prop instead.</li>
<li><code>titleNumberOfLines</code>, <code>subtitleNumberOfLines</code>, and <code>rightTitleNumberOfLines</code> props removed. Use the <code>titleProps</code>, <code>rightTitleProps</code>, and <code>subtitleProps</code> props to pass props for each..</li>
</ul>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">ListItem</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">titleProps</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">numberOfLines</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">4</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li><code>hideChevron</code> removed. Use the <code>chevron</code> prop instead. However, the behaviour is swapped <code>hideChevron={true}</code> behaves like <code>chevron={false}</code></li>
<li><code>chevronColor</code> removed. The <code>chevron</code> prop now can accept an object describing it's appearance.</li>
</ul>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">ListItem</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">chevron</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">color</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">'pink'</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li><code>fontFamily</code> removed. Use the <code>titleStyle</code> and <code>subTitleStyle</code> props to set change the text styling</li>
<li><code>titleContainerStyle</code> removed. Use the <code>titleStyle</code> prop instead.</li>
<li><code>rightTitleContainerStyle</code> removed. Use the <code>rightTitleStyle</code> prop instead.</li>
<li><code>subtitleContainerStyle</code> removed. Use the <code>subtitleStyle</code> prop instead.</li>
<li><code>label</code> prop removed.</li>
<li><code>switchButton</code>, <code>onSwitch</code>, <code>switchDisabled</code>, <code>switchOnTintColor</code>, <code>switchThumbTintColor</code>, <code>switchTintColor</code>, and <code>switched</code> removed. Instead use the <code>switch</code> prop wich accepts an object describing its props.</li>
<li><code>textInput</code>,<code>textInputAutoCapitalize</code>,<code>textInputAutoCorrect</code>,<code>textInputAutoFocus</code>,<code>textInputEditable</code>,<code>textInputKeyboardType</code>,<code>textInputMaxLength</code>,<code>textInputMultiline</code>,<code>textInputOnChangeText</code>,<code>textInputOnFocus</code>,<code>textInputOnBlur</code>,<code>textInputSelectTextOnFocus</code>,<code>textInputReturnKeyType</code>,<code>textInputValue</code>,<code>textInputSecure</code>,<code>textInputStyle</code>,<code>textInputContainerStyle</code>,<code>textInputPlaceholder</code> removed. We now expose a single <code>input</code> prop which accepts an object describing its props.</li>
<li><code>onPressRightIcon</code> removed. Use the <code>rightIcon</code> prop which can accept an object now describing its props.</li>
</ul>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">ListItem</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">rightIcon</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">name</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">'home'</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript function-variable function" style="color:#d73a49">onPress</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript console class-name" style="color:#00009f">console</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript method function property-access" style="color:#d73a49">log</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript string" style="color:#e3116c">'clicked'</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="pricingcard"><code>PricingCard</code><a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#pricingcard" class="hash-link" aria-label="Direct link to pricingcard" title="Direct link to pricingcard">​</a></h3>
<ul>
<li><code>titleFont</code> removed. Use the <code>titleStyle</code> prop instead to customize the title. <a href="https://github.com/react-native-elements/react-native-elements/pull/1231" target="_blank" rel="noopener noreferrer">#1231</a></li>
<li><code>pricingFont</code> removed. Use the <code>pricingStyle</code> prop instead to customize the price. <a href="https://github.com/react-native-elements/react-native-elements/pull/1231" target="_blank" rel="noopener noreferrer">#1231</a></li>
<li><code>infoFont</code> removed. Use the <code>infoStyle</code> prop instead to customize the info. <a href="https://github.com/react-native-elements/react-native-elements/pull/1231" target="_blank" rel="noopener noreferrer">#1231</a></li>
<li><code>buttonFont</code> removed. Use the <code>button</code> prop with a <code>buttonStyle</code> key to set this.</li>
</ul>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">PricingCard</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">button</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">buttonStyle</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">fontFamily</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">'Arial'</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="text"><code>Text</code><a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#text" class="hash-link" aria-label="Direct link to text" title="Direct link to text">​</a></h3>
<ul>
<li><code>fontFamily</code> prop is removed - instead use <code>style</code> prop (<a href="https://github.com/react-native-elements/react-native-elements/pull/1587" target="_blank" rel="noopener noreferrer">#1659</a>)</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-features">New features<a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#new-features" class="hash-link" aria-label="Direct link to New features" title="Direct link to New features">​</a></h2>
<ul>
<li>Support for React Native Web - read more on it <a href="https://rnvikalpelements.thevikalp.com/blog/2018/12/13/react-native-web">here</a> (<a href="https://github.com/react-native-elements/react-native-elements/pull/1664" target="_blank" rel="noopener noreferrer">#1664</a>)</li>
<li>Theming support across components - easily build light &amp; dark modes and theme your components from one place (<a href="https://github.com/react-native-elements/react-native-elements/pull/1454" target="_blank" rel="noopener noreferrer">#1454</a>)</li>
<li>New <code>&lt;Image /&gt;</code> Component - displays images with a placeholder and smooth image load transitioning (<a href="https://github.com/react-native-elements/react-native-elements/pull/1582" target="_blank" rel="noopener noreferrer">#1582</a>)</li>
<li>New <code>&lt;Input /&gt;</code> Component - a branch new and improved replacement for <code>&lt;FormInput /&gt;</code> (<a href="https://github.com/react-native-elements/react-native-elements/pull/497" target="_blank" rel="noopener noreferrer">#497</a>)</li>
<li>New <code>withBadge</code> HOC allows you to easily add badges to icons and other components (<a href="https://github.com/react-native-elements/react-native-elements/pull/1604" target="_blank" rel="noopener noreferrer">#1604</a>)</li>
<li>New "mini badge" with the <code>&lt;Badge /&gt;</code> component - Perfect for status indicators and notifications <a href="https://github.com/react-native-elements/react-native-elements/pull/1545" target="_blank" rel="noopener noreferrer">#1545</a></li>
<li>New Tap Rating <code>&lt;AirbnbRating /&gt;</code> component - powered by <code>react-native-ratings</code> (<a href="https://github.com/react-native-elements/react-native-elements/pull/1671" target="_blank" rel="noopener noreferrer">#1671</a>)</li>
<li>Platform-specific <code>&lt;SearchBar /&gt;</code> component - drop-in usage with native look and feel (<a href="https://github.com/react-native-elements/react-native-elements/pull/837" target="_blank" rel="noopener noreferrer">#837</a>)</li>
<li><code>&lt;Slider /&gt;</code> Component - supports <code>vertical</code> orientation (<a href="https://github.com/react-native-elements/react-native-elements/pull/1698" target="_blank" rel="noopener noreferrer">#1698</a>)</li>
<li>Button types! Easily have solid, clear, and outline buttons with one prop. (<a href="https://github.com/react-native-elements/react-native-elements/pull/1540" target="_blank" rel="noopener noreferrer">#1540</a>)</li>
<li>Background image support in the <code>&lt;Header /&gt;</code> (<a href="https://github.com/react-native-elements/react-native-elements/pull/1556" target="_blank" rel="noopener noreferrer">#1556</a>)</li>
<li>Add support for <code>AntDesign</code> icons (<a href="https://github.com/react-native-elements/react-native-elements/pull/1529" target="_blank" rel="noopener noreferrer">#1529</a>)</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="assorted-fixes--improvements">Assorted fixes &amp; improvements<a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#assorted-fixes--improvements" class="hash-link" aria-label="Direct link to Assorted fixes &amp; improvements" title="Direct link to Assorted fixes &amp; improvements">​</a></h2>
<ul>
<li>Updated <code>react-native-vector-icons</code> peerDependency to <code>&gt;4.2.0</code></li>
<li>Expose <code>helpers</code> methods that are used internally</li>
<li>Close to 100% types coverage</li>
<li>Docs<!-- -->
<ul>
<li>Add descriptions for every Component (<a href="https://github.com/react-native-elements/react-native-elements/pull/1527" target="_blank" rel="noopener noreferrer">#1527</a>)</li>
<li>Add central place to show supported icon sets (<a href="https://github.com/react-native-elements/react-native-elements/pull/1532" target="_blank" rel="noopener noreferrer">#1532</a>)</li>
<li>Added Showcase section to display apps using RNE (<a href="https://github.com/react-native-elements/react-native-elements/pull/1704" target="_blank" rel="noopener noreferrer">#1704</a>)</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ecosystem-and-web-support">Ecosystem and web support<a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#ecosystem-and-web-support" class="hash-link" aria-label="Direct link to Ecosystem and web support" title="Direct link to Ecosystem and web support">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="independent-projects">Independent Projects<a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#independent-projects" class="hash-link" aria-label="Direct link to Independent Projects" title="Direct link to Independent Projects">​</a></h3>
<ul>
<li>Mock iOS Settings Screen - Check it out on the <a href="https://github.com/Monte9/react-native-elements-app" target="_blank" rel="noopener noreferrer">RNE-App here</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="web-support">Web Support<a href="https://rnvikalpelements.thevikalp.com/blog/2019/01/27/1.0-release#web-support" class="hash-link" aria-label="Direct link to Web Support" title="Direct link to Web Support">​</a></h3>
<ul>
<li>Follow <a href="https://rnvikalpelements.thevikalp.com/blog/2018/12/13/react-native-web">this detailed Blog Post</a> to use RNElements with RNWeb</li>
</ul>
<blockquote>
<p>Lastly, here is the RNE v1 release in numbers:</p>
<ul>
<li>470 commits (with over 272 PR's)</li>
<li>371 files changes (52,920 additions and 32,737 deletions)</li>
<li>Over 80 contributors</li>
<li>Over $1500 awarded to contributors</li>
</ul>
</blockquote>
<hr>
<p>Thanks for reading! Feel free to share this post if you enjoyed reading it.</p>
<p>If you run into any trouble using RNE, please open a new issue <a href="https://github.com/react-native-elements/react-native-elements/issues" target="_blank" rel="noopener noreferrer">here</a>. Also if you want to support us, you can contribute to our Open Collective <a href="https://opencollective.com/react-native-elements" target="_blank" rel="noopener noreferrer">here</a>.</p>]]></content>
        <author>
            <name>Core Team</name>
            <uri>https://opencollective.com/react-native-elements#team</uri>
        </author>
    </entry>
</feed>